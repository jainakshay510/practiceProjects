package multithreadingexample;

import java.util.LinkedList;
import java.util.Scanner;

public class ProducerConsumerUsingWaitNotify {
	
	
	private Object lock=new Object();
	
	private LinkedList<Integer> list=new LinkedList<>();
	
	int value=0;
	public void producer() throws InterruptedException {
		
		while(true) {
			synchronized (lock) {
				System.out.println("Producer thread running....");
				list.add(value++);
				lock.wait();
				
			}
		}
	}
	
	public void consumer() throws InterruptedException {
		
		
		//just used so that producer thread get executed first
		Thread.sleep(100);
		
		while(true) {
			synchronized (lock) {
				System.out.println("list size : "+list.size());
				int value=list.removeFirst();
				System.out.println("consumed value : "+value+" lis size : " +list.size());
				lock.notify();
				
			}
		}
		
	}

}
