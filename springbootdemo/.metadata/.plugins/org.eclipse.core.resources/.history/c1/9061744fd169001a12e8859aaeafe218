package multithreadingexample;

import java.util.Random;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class ProducerConsumer {
	
	private BlockingQueue<Integer> queue=new ArrayBlockingQueue<>(10);
	
	private Random random=new Random(100);
	
	public void produce() throws InterruptedException {
		
		while(true) {
			
			queue.put(random.nextInt());
			
		}
		
	}
	
	public void consume() throws InterruptedException {
		
		Thread.sleep(100);
		while(true) {
			int value=queue.take();
			System.out.println("Taken value is : "+value);
		}
		
	}

}
