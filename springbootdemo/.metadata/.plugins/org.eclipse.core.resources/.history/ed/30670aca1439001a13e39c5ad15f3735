#Port where  spring cloud config server needs to run
server.port = 51000

#adding context path
server.servlet.context-path=/config

# spring.profiles.active and spring.cloud.config.server.native.search-locations for     # connecting to local file system for configuration.
#################################################################
spring.profiles.active=native

spring.cloud.config.server.native.search-locations=file:///C:/Users/M1050360/Desktop/cordaharvestproperties

#Server would return a HTTP 404 status, if the application is not found.By default, this flag is set to true.
spring.cloud.config.server.accept-empty=false


# Uncomment spring.cloud.config.server.git.uri and spring.cloud.config.server.git.search-paths for # connecting to git Repo for configuration.
#################################################################
#Git repository location where configuration files are stored
spring.cloud.config.server.git.uri=https://git-cto.mindtree.com/M1050360/cordaharvestconfifiles

#Path inside the GIT repo where config files are stored, in our case they are inside config directory
#spring.cloud.config.server.git.search-paths=<folder-in-git-repository-containing-configuration>
